# -*- mode: n3; outline-regexp: "[#]+ "; -*-
# handy bits from outline mode:
#   C-c @ C-l	hide-leaves - on prefixes, entries, definitions
#   C-c @ C-s	show-subtree - on anything you're hacking
#  Note that incremental search opens leaves for the duration of the search.

# prefixes
@base <https://raw.githubusercontent.com/shexSpec/shexTest/master/validation/manifest> .
@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix mf:     <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix sht:     <http://www.w3.org/ns/shacl/test-suite#> .
@prefix prov:   <http://www.w3.org/ns/prov#> .

 # TODO:
 #   focus* on empty.ttl
 #   ../schemas/1IRI_with_all_punctuationdot.shex
 #   ../schemas/1IRI_with_UCHAR.1dot.shex
 #   ../schemas/1val1STRING_LITERAL2.shex
 #   ../schemas/1val1STRING_LITERAL2_with_LANGTAG.shex
 #   ../schemas/1val1STRING_LITERAL2_with_subtag.shex
 #   ../schemas/1val1STRING_LITERAL_LONG1.shex
 #   ../schemas/1val1STRING_LITERAL_LONG2.shex
 #   ../schemas/1val1STRING_LITERAL_LONG2_with_LANGTAG.shex
 #   ../schemas/1val1STRING_LITERAL_LONG2_with_subtag.shex
 #   repeated OR
 #   1dotRefOR3 on..
 # 1IRIInline0, focusbnode0ORfocusPattern0
 # <#1dotAND1dotAND1dot>, <#open1dotAND1dotcloseAND1dot>, <#1dotANDopen1dotAND1dotclose>

 # 1val1dotMinuslanguage3.shex - 1val1dotMinusiri3.shex
 #         <#1val1dotMinusiri3_pass>
 #         <#1val1dotMinusiri3_v1>
 #         <#1val1dotMinusiri3_v2>
 #         <#1val1dotMinusiri3_v3>
 # 1val1dotMinuslanguageStem3.shex - 1val1dotMinusiriStem3.shex
 #         <#1val1dotMinusiriStem3_pass>
 #         <#1val1dotMinusiriStem3_v1>
 #         <#1val1dotMinusiriStem3_v2>
 #         <#1val1dotMinusiriStem3_v3>
 #         <#1val1dotMinusiriStem3_v1a>
 # 1val1literalAtlanguageStem.shex -
 # 1val1literalAtlanguageStemMinusliteralAtlanguage3 -


# entries
<> a mf:Manifest ;
    rdfs:comment "ShEx validation tests" ;
    mf:entries
    (
## empty
        <#0_empty>
        <#0_other>
        <#0_otherbnode>

## triple pattern
        <#1dot_fail-empty>
        <#1dot-base_fail-empty>
        <#1dot_fail-missing>
        <#1dot-base_fail-missing>
        <#1dot_pass-noOthers> <#1dot-base_pass-noOthers> <#1dotSemi_pass-noOthers> <#1dotLNex_pass-noOthers> <#1dotNS2_pass-noOthers> <#1dotNS2Comment_pass-noOthers> <#1dotLNexComment_pass-noOthers> <#1dotLNdefault_pass-noOthers> <#1dotNSdefault_pass-noOthers> <#1dotLNex-HYPHEN_MINUS_pass-noOthers>
        <#1dot_pass-others_lexicallyEarlier>
        <#1dot_pass-others_lexicallyLater>
        <#bnode1dot_fail-missing>
        <#bnode1dot_pass-others_lexicallyEarlier>
        <#1inversedot_fail-empty>
        <#1inversedot_fail-missing>
        <#1inversedot_pass-noOthers>
        <#1inversedot_pass-over_lexicallyEarlier>
        <#1inversedot_pass-over_lexicallyLater>
        <#1Adot_pass>
        <#PstarT>

    ) .

# definitions
## empty {

<#0_empty> a sht:ValidationTest ;
    mf:name "0_empty" ;
    sht:trait sht:Empty ;
    rdfs:comment "<S1> {  } on {  }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/0.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <empty.ttl> ;
      sht:focus <http://a.example/dummy>
    ]
    .

<#0_other> a sht:ValidationTest ;
    mf:name "0_other" ;
    sht:trait sht:Empty ;
    rdfs:comment "<S1> {  } on { <s1> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/0.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#0_otherbnode> a sht:ValidationTest ;
    mf:name "0_otherbnode" ;
    sht:trait sht:Empty, sht:ToldBNode ;
    rdfs:comment "<S1> {  } on { _:abcd <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/0.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Babcd_Ip1_Io1.ttl> ;
      sht:focus _:abcd
    ]
    .

## } empty
## triple pattern {

<#1dot_fail-empty> a sht:ValidationFailure ;
    mf:name "1dot_fail-empty" ;
    sht:trait sht:TriplePattern ;
    rdfs:comment "<S1> { <p1> . } on {  }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <empty.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1dot-base_fail-empty> a sht:ValidationFailure ;
    mf:name "1dot-base_fail-empty" ;
    sht:trait sht:TriplePattern ;
    rdfs:comment "BASE <…> <S1> { <p1> . } on {  }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dot-base.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <empty.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1dot_fail-missing> a sht:ValidationFailure ;
    mf:name "1dot_fail-missing" ;
    sht:trait sht:TriplePattern ;
    rdfs:comment "<S1> { <p1> . } on { <s1> <p2> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip2_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1dot-base_fail-missing> a sht:ValidationFailure ;
    mf:name "1dot-base_fail-missing" ;
    sht:trait sht:TriplePattern ;
    rdfs:comment "BASE <…> <S1> { <p1> . } on { <s1> <p2> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dot-base.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip2_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1dot_pass-noOthers> a sht:ValidationTest ;
    mf:name "1dot_pass-noOthers" ;
    sht:trait sht:TriplePattern ;
    rdfs:comment "<S1> { <p1> . } on { <s1> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1dot-base_pass-noOthers> a sht:ValidationTest ;
    mf:name "1dot-base_pass-noOthers" ;
    sht:trait sht:TriplePattern ;
    rdfs:comment "BASE <…> <S1> { <p1> . } on { <s1> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dot-base.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1dotSemi_pass-noOthers> a sht:ValidationTest ;
    mf:name "1dotSemi_pass-noOthers" ;
    sht:trait sht:TriplePattern ;
    rdfs:comment "PREFIX : <http://a.example/> <S1> { :p1 ., } on { <s1> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotSemi.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1dotLNex_pass-noOthers> a sht:ValidationTest ;
    mf:name "1dotLNex_pass-noOthers" ;
    sht:trait sht:TriplePattern ;
    rdfs:comment "PREFIX ex: <http://a.example/> ex:S1 { ex:p1 . } on { <s1> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotLNex.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1dotNS2_pass-noOthers> a sht:ValidationTest ;
    mf:name "1dotNS2_pass-noOthers" ;
    sht:trait sht:TriplePattern ;
    rdfs:comment "PREFIX S1: <http://a.example/S1> PREFIX p1: <http://a.example/p1> S1: { p1: . } on { <s1> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotNS2.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1dotNS2Comment_pass-noOthers> a sht:ValidationTest ;
    mf:name "1dotNS2Comment_pass-noOthers" ;
    sht:trait sht:TriplePattern ;
    rdfs:comment "PREFIX S1: <http://a.example/S1> PREFIX p1: <http://a.example/p1> S1: { p1:/*comment*/ . } on { <s1> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotNS2Comment.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1dotLNexComment_pass-noOthers> a sht:ValidationTest ;
    mf:name "1dotLNexComment_pass-noOthers" ;
    sht:trait sht:TriplePattern ;
    rdfs:comment "PREFIX ex: <http://a.example/> ex:S1 { ex:p1/*comment*/ . } on { <s1> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotLNexComment.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1dotLNdefault_pass-noOthers> a sht:ValidationTest ;
    mf:name "1dotLNdefault_pass-noOthers" ;
    sht:trait sht:TriplePattern ;
    rdfs:comment "PREFIX : <http://a.example/> :S1 { :p1 . } on { <s1> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotLNdefault.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1dotNSdefault_pass-noOthers> a sht:ValidationTest ;
    mf:name "1dotNSdefault_pass-noOthers" ;
    sht:trait sht:TriplePattern ;
    rdfs:comment "PREFIX : <http://a.example/p1> <S1> { : . } on { <s1> :p1 <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotNSdefault.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1dotLNex-HYPHEN_MINUS_pass-noOthers> a sht:ValidationTest ;
    mf:name "1dotLNex-HYPHEN_MINUS_pass-noOthers" ;
    sht:trait sht:TriplePattern ;
    rdfs:comment "PREFIX ex: <http://a.example/> ex:S1 { ex:p1- . } on { <s1> <p1-> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotLNex-HYPHEN_MINUS.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1HYPHEN_MINUS_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1dot_pass-others_lexicallyEarlier> a sht:ValidationTest ;
    mf:name "1dot_pass-others_lexicallyEarlier" ;
    sht:trait sht:TriplePattern ;
    rdfs:comment "<S> { <p1> . } on { <s1> <p0> <o0>; <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip0_Io0;Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1dot_pass-others_lexicallyLater> a sht:ValidationTest ;
    mf:name "1dot_pass-others_lexicallyLater" ;
    sht:trait sht:TriplePattern ;
    rdfs:comment "<S> { <p1> . } on { <s1> <p1> <o1>; <p2> <o2> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1;Ip2_Io2.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#bnode1dot_fail-missing> a sht:ValidationFailure ;
    mf:name "bnode1dot_fail-missing" ;
    sht:trait sht:ToldBNode , sht:TriplePattern ;
    rdfs:comment "_:S { <p1> . } on { <s1> <p2> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/bnode1dot.shex> ;
      sht:shape _:S1 ;
      sht:data <Is1_Ip2_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#bnode1dot_pass-others_lexicallyEarlier> a sht:ValidationTest ;
    mf:name "bnode1dot_pass-others_lexicallyEarlier" ;
    sht:trait sht:ToldBNode , sht:TriplePattern ;
    rdfs:comment "_:S1 { <p1> . } on { <s1> <p0> <o0>; <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/bnode1dot.shex> ;
      sht:shape _:S1 ;
      sht:data <Is1_Ip0_Io0;Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1inversedot_fail-empty> a sht:ValidationFailure ;
    mf:name "1inversedot_fail-empty" ;
    sht:trait sht:TriplePattern ;
    rdfs:comment "<S> { ^<p1> . } on {  }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1inversedot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <empty.ttl> ;
      sht:focus <http://a.example/o1>
    ]
    .

<#1inversedot_fail-missing> a sht:ValidationFailure ;
    mf:name "1inversedot_fail-missing" ;
    sht:trait sht:TriplePattern ;
    rdfs:comment "<S> { ^<p1> . } on { <s1> <p2> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1inversedot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip2_Io1.ttl> ;
      sht:focus <http://a.example/o1>
    ]
    .

<#1inversedot_pass-noOthers> a sht:ValidationTest ;
    mf:name "1inversedot_pass-noOthers" ;
    sht:trait sht:TriplePattern ;
    rdfs:comment "<S> { ^<p1> . } on { <sr> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1inversedot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/o1>
    ]
    .

<#1inversedot_pass-over_lexicallyEarlier> a sht:ValidationTest ;
    mf:name "1inversedot_pass-over_lexicallyEarlier" ;
    sht:trait sht:TriplePattern ;
    rdfs:comment "<S> { ^<p1> . } on { <s1> <p0> <o0>; <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1inversedot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip0_Io0;Ip1_Io1.ttl> ;
      sht:focus <http://a.example/o1>
    ]
    .

<#1inversedot_pass-over_lexicallyLater> a sht:ValidationTest ;
    mf:name "1inversedot_pass-over_lexicallyLater" ;
    sht:trait sht:TriplePattern ;
    rdfs:comment "<S> { ^<p1> . } on { <s1> <p1> <o1>; <p2> <o2> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1inversedot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1;Ip2_Io2.ttl> ;
      sht:focus <http://a.example/o1>
    ]
    .

<#1Adot_pass> a sht:ValidationTest ;
    mf:name "1Adot_pass" ;
    sht:trait sht:TriplePattern ;
    rdfs:comment "<S> { a . } on { <s1> a <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1Adot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_a_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#PstarT> a sht:ValidationTest ;
    mf:name "PstarT" ;
    sht:trait sht:EachOf ;
    rdfs:comment "<S1> {:a @<P>*, :a @<T>} / { <n> :a <pt1>,  <pt2>,  <p>,  <t> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../validation/Pstar.shex> ;
      sht:shape <http://a.example/base/S1> ;
      sht:data <Pstar.ttl> ;
      sht:focus <http://a.example/base/n>
    ]
    .


## } error reporting
# futureWork {
## inherit {

 # !../schemas/0Inherit1.shex
 # !../schemas/1dotInherit1.shex
 # !../schemas/1dotInherit3.shex
 # !../schemas/1dot3Inherit.shex [1dotInherit3.shex]
 # !../schemas/1dot3InheritLN.shex

### virtual {
 # !../schemas/1dotVirtualShapeCode1.shex
 # !../schemas/1dotVirtual.shex
### } virtual
## } inherit
## unlabeled semantic actions {
 # !../schemas/1dotUnlabeledCode1.shex
## } unlabeled semantic actions
## everything {
 # !../schemas/_all.shex
 # !../schemas/kitchenSink.shex
## } everything
# } futureWork
